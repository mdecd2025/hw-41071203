var tipuesearch = {"pages": [{'title': 'About', 'text': '課程名稱: 協同產品設計實習 - Collaborative Product Design Practice \n 學員作業網站:  https://mdecd2025.github.io/hw-41071203/content/index.html \n 學員作業倉儲:  https://github.com/mdecd2025/hw-41071203 \n \n 課程代號: cd2025 \n Teams 線上教學: \n 以 "學號@nfu.edu.tw" 登入 \xa0 https://login.microsoftonline.com/ \xa0 Office 365 \n Teams 團隊代碼:\xa0 p5z4eku \n \n 課程評分: \n Homework (30%) - 每週至少提交兩次與課程進度有關的內容, 完成後填回自評表單 \n Exam (40%) - 建立包含操作流程影片、心得以及提供檔案下載的網頁後填回自評表單 \n Final Report (30%) - 利用網頁內容進行簡報並提交 pdf 格式書面報告, 完成後填回自評表單 \n \n \n', 'tags': '', 'url': 'About.html'}, {'title': 'Tasks', 'text': 'task1 與 task2 任務目的在建立可於近端維護個人作業與協同作業的準備工作: \n \xa0 \xa0 \xa0 task1 (自行製作可攜程式系統) \n \xa0 \xa0 \xa0 task2 (使用 SSH 協定執行作業倉儲的推送) \n task3 與 task4 則為 HW2 的內容之一 \n \xa0 \xa0 \xa0 task3 (使用 Solvespace 建立平面四連桿系統零組件) \n \xa0 \xa0 \xa0 task4 (使用 Onshape 建立平面四連桿系統零組件) \n task5 與 task6 則為 HW3 的主要內容 \n \xa0 \xa0 \xa0 task5 (Webots Tutorial 1 ~3) \n \xa0 \xa0 \xa0 task6 (Webots Tutorial 4 ~6) \n', 'tags': '', 'url': 'Tasks.html'}, {'title': 'Wink', 'text': '\n \n', 'tags': '', 'url': 'Wink.html'}, {'title': 'task1', 'text': '\n', 'tags': '', 'url': 'task1.html'}, {'title': 'list', 'text': '程式碼 \n \n \n # 從  Brython 程式庫中的 browser 導入 html, 可用來輸出超文件內容\n# 而所導入的 document 可以指向網頁中的特定 id 內容\nfrom browser import html, document\n# 建立 url 變數與網站中 2b 學員的學號與帳號資料 URL 網誌字串對應\nurl = "https://mde.tw/list/2b.txt"\n# 利用 open() 物件中的 readlines() 方法, 取出網站中的資料並逐行放入數列中, 因此 data 的資料型別為數列\ndata = open(url).readlines()\n# 進行資料查驗時, 印出 data 數列內容\n#print(data)\n# 因為學員資料中的第一列為標題, 因此有效資料從索引值 1 開始\nall_stud = data[1:]\n# 利用 len() 函式查驗 all_stud 數列有幾筆資料, 因為要與前後的字串併接, 因此利用 str() 將整數轉為字串\nprint("總共有 " + str(len(all_stud)) + "名學員")\n#\n# 利用 document[] 取得 id 為 "brython_div1" 的位置, 然後與 brython_div1 變數對應\nbrython_div1 = document["brython_div1"]\n# 利用 Brython 的 "<=" 特殊符號, 將右值帶有字串與超文件內容物件插入 brython_div1 變數所指定的位置\n# 其中利用 html.A 建立 anchor 標註物件, 第一個變數為 anchor 字串, 第二個變數則為 hyper text reference\nbrython_div1 <= "1. " + html.A("2b-g8", href="https://mdecd2025.github.io/2b-g8/")+ html.A("(repo)", href="https://github.com/mdecd2025/2b-g8")\n# 利用 html.BR() 插入 break 標註\nbrython_div1 <= html.BR()\nbrython_div1 <= "2. " + html.A("41023215", href="https://mdecd2025.github.io/hw-41023215/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41023215")\nbrython_div1 <= html.BR()\nbrython_div1 <= "3. " + html.A("41023216", href="https://mdecd2025.github.io/hw-41023216/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41023216")\nbrython_div1 <= html.BR()\nbrython_div1 <= "4. " + html.A("41023213", href="https://mdecd2025.github.io/hw-41023213/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41023213")\nbrython_div1 <= html.BR()\nbrython_div1 <= "5. " + html.A("41071203", href="https://mdecd2025.github.io/hw-41071203/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41071203")\nbrython_div1 <= html.BR()\nbrython_div1 <= "6. " + html.A("41071204", href="https://mdecd2025.github.io/hw-41071204/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41071204")\nbrython_div1 <= html.BR()\nbrython_div1 <= "7. " + html.A("41071202", href="https://mdecd2025.github.io/hw-41071202/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41071202") \n \n \n \n \n', 'tags': '', 'url': 'list.html'}, {'title': 'task2', 'text': '使用 SSH 協定執行作業倉儲的推送操作影片 \n \n', 'tags': '', 'url': 'task2.html'}, {'title': 'IPV6', 'text': '\n \n \n \n \n \n \n', 'tags': '', 'url': 'IPV6.html'}, {'title': 'w3', 'text': 'Brython版本 \n \n \n \n', 'tags': '', 'url': 'w3.html'}, {'title': 'task3', 'text': '使用 Solvespace 建立平面四連桿系統零組件 (HW2) \n base \n \n link1 \n \n link2 \n \n link3 \n \n shaft1 \n \n shaft2 \n \n \n \n \n', 'tags': '', 'url': 'task3.html'}, {'title': 'task4', 'text': '使用 Onshape 建立平面四連桿系統零組件 (HW2) \n 1.在 onshape 上繪製零件 \n 2.將零件檔匯出成 \xa0 .OBJ \n 3.在 webots 上組裝零件 \n \n   \n 調整後參數設定 \n \n', 'tags': '', 'url': 'task4.html'}, {'title': 'w5', 'text': 'Webots連接練習示範影片 \n \n', 'tags': '', 'url': 'w5.html'}, {'title': 'task5', 'text': '', 'tags': '', 'url': 'task5.html'}, {'title': 'task6', 'text': '\n', 'tags': '', 'url': 'task6.html'}, {'title': 'Homework', 'text': '作業 (30%) \n HW1 (5%):  建立由 Box 組成的平面四連桿機構 Webots 模擬場景 \n part1: \n 請各學員在 USB 隨身碟或個人電腦上完成 cd2025 課程所需的可攜系統配置: \n 下載  portable_wcm2025.7z  (330MB, 解開壓縮後 1.4GB) \n Webots_2025a.7z  (1.5 GB, 解開後約為 2.9GB, 可單獨運作) \n Webots_2025a_web.7z  (171 MB, 解開壓縮後約為 1GB, 必須連網運作) \n Blender4.2.7z \n part2: \n 請各學員完成可攜程式系統配置後, 利用 Webots R2025a 中寬度與高度都為 0.1m 的 box 物件建立一個簡單的平面四連桿機構模擬場景. \n base (基座) 長度 1m, link1 長度 0.4m, link2 長度 0.6m, link3 長度 0.9m, 各轉軸均為 HingeJoint, joint1 旋轉速度設定為 1radian/sec. \n part3: \n 模擬場景啟動後, 按下 s 鍵機構開始作動, 按下 p 鍵後機構暫停. \n 參考資料: \n cd2025_hw1_demo.7z \n HW2 (5%):  建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景 \n 各學員請利用 CAD 系統依據 HW1 的連桿尺寸與運動方式, 配置適當大小的旋轉軸以及基座後, 利用 Webots R2025a 完成一個簡單的平面四連桿機構模擬場景. \n 參考資料: \n fourbar_slvs.7z \n HW3 (20%): 建立 Webots 桌上籃球遊戲機模擬系統 \n 請各分組利用CAD 系統建立一個能在電腦桌 (1600W X 700D X 740H mm) 上運作的投籃機構 ( 參考影片 )後, 導入 Webots R2025a 套件, 建立一個能由使用者透過鍵盤按鍵操作, 且具備計分板的籃球遊戲機模擬系統. \n 參考資料: \n 參考資料: \n fourbar_ball_throwing_linkage.slvs \n sixbar_ball_throwing_linkage.slvs \n \n', 'tags': '', 'url': 'Homework.html'}, {'title': 'HW1', 'text': 'HW1 (5%):  建立由 Box 組成的平面四連桿機構 Webots 模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW1 - 學員學號 \n \n 檔案: \xa0 四連桿機構原始檔 \n 步驟: \n 一、基座 (Base) 1.在 robot.children 下新增一個 Solid 節點命名為 base。 \n 2.base.children 中加入： \n \n Shape 節點，其中包含： \n geometry 使用 Box { size 1 0.1 0.1 } \n \n \xa0base 是整體機器人的底座。 \n \n 二、連桿一 (Link1) \n 1.在 robot.children 下加入 HingeJoint，命名為 joint1。 \n 2.joint1 下包含一個 Solid，其內結構如下： \n \n translation: -0.5 0 0 \n rotation: 0 0 1 1.5708 \n \n 3.children 包含： \n \n Pose (位置為 0.2 0 0.1) 內含： \n Shape → Box { size 0.4 0.1 0.1 } \n Appearance → Material { diffuseColor 1 0 0 } \n \n 4.joint1 的其他設定： \n \n HingeJointParameters：\n \n axis: 0 0 1 \n anchor: -0.5 0 0 \n \n \n \n 5.加入一個 RotationalMotor 作為控制器裝置。 \n \n 三、連桿二 (Link2) 1.在 joint1 下加入第二個 HingeJoint，命名為 joint2。 \n 2.joint2 的 Solid 結構： \n \n translation: 0.4 0 0.1 \n rotation: 0 0 -1 1.047195307179586 \n \n 3.children 包含： \n \n Pose (0.3 0 0.1) 包含：\n \n Shape → Box { size 0.6 0.1 0.1 } \n Appearance → Material { diffuseColor 0 1 0 } \n \n \n \n 4.joint2 的參數： \n \n HingeJointParameters：\n \n axis: 0 0 1 \n anchor: 0.4 0 0 \n \n \n \n \n 四、連桿三 (Link3) 1.在 joint2 下建立 HingeJoint，命名為 joint3。 \n 2.joint3 內部 Solid： \n \n translation: 0.6 0 0 \n rotation: 0 0 -1 1.5 \n \n 3.children 中的 Pose (0.42 0 0) 含有： \n \n Shape → Box { size 0.9 0.1 0.1 } \n Appearance → Material { diffuseColor 0 0 1 } \n \n 4.HingeJointParameters： \n \n axis: 0 0 1 \n anchor: 0.6 0 0 \n \n \n 五、Bounding Object 與物理屬性設定 1.為三個連桿加入對應的 boundingObject 與 physics： \n 2.Link1: Pose { translation 0.2 0 0.1 } → boundingObject → physics \n 3.Link2: Pose { translation 0.3 0 0.1 } → boundingObject → physics \n 4.Link3: Pose { translation 0.4 0 0 } → boundingObject → physics \n \n 六、連結到最末端連桿 (Link3) 1.在 robot.children 下加入 HingeJoint 命名為 joint4 \n 2.joint4 的子節點為 SolidReference { solidName "link3" } \n 3.設定 HingeJointParameters： \n \n axis: 0 0 1 \n anchor: 0.5 0 0 \n \n \n 七、控制器 在 robot 中加入控制器，指向 .empty4 \n 心得: \n 一開始不太熟練Webots，因為之前都沒碰過這個程式，所以一直練習，還不斷問老師與同學，才成功把作業做出來，做出來那一刻很有成就感。', 'tags': '', 'url': 'HW1.html'}, {'title': 'HW2', 'text': 'HW2 (5%):  建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW2 - 學員學號 \n \n \n HW2連桿.zip', 'tags': '', 'url': 'HW2.html'}, {'title': 'HW3', 'text': 'HW3 (20%): 建立 Webots 桌上籃球遊戲機模擬系統 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW3 - 41071203 \n HW3檔案 \n', 'tags': '', 'url': 'HW3.html'}, {'title': 'Midterm', 'text': '本課程所繳交的期中成績為學員自評之學習期望成績. \n 期中考週的自評期望成績繳交流程: \n \n 整理先前所完成的各週的進度、作業網頁內容以及心得 \n 拍攝期中自評影片, 上傳至 Youtube 後, 以" 國立虎尾科技大學 - 機械設計工程系 - cd2025 期中自評- 學員學號 "為影片標題後嵌入本頁面中 \n 回填期中自評表單 \n 上傳學員期中成績 \n \n 各週進度: \n 第1周 領取倉儲網頁與建立個人網站 第2周 建立list頁面與新增程式碼 第3周 修正錯誤與上傳新程式碼 第4周 製作可攜程式操作影片上傳 第5周 IPV6操作影片上傳 第6周 新增W5頁面與Webots操作影片上傳 第7周 SSH操作影片上傳 第8周 HW1做動影片和原始檔上傳 第9周 Task4與hw2操作影片上傳 第10周 task3操作影片新增、更改Tasks頁面內容、Wink操作影面上傳、完成Midterm內容 \n \n 各週網頁內容: \n 第1周 領取倉儲網頁與建立個人網站 第2周 建立list頁面與新增程式碼 第3周 修正錯誤與上傳新程式碼 第4周 製作可攜程式操作影片上傳 第5周 IPV6操作影片上傳 第6周 新增W5頁面與Webots操作影片上傳 第7周 SSH操作影片上傳 第8周 HW1做動影片和原始檔上傳 第9周 Task4與hw2操作影片上傳 第10周 task3操作影片新增、更改Tasks頁面內容、Wink操作影面上傳、完成Midterm內容 \n \n 期中心得: \n 課上學到很多東西，因為很多都是之前沒碰過的，所以回家還需要回去吸收並整理，在這過程中我學到很多東西，像是Webots操作和連桿建立，與一些程式操作模擬等，每周都有盡量跟上進度，並編輯網站與更新倉儲。 \n \n 期中自評影片: \n \n \n', 'tags': '', 'url': 'Midterm.html'}, {'title': 'Exam', 'text': 'Exam1 (10%): 建立 Webots 基本物件模擬場景 \n 各學員利用 Webots R2025a 套件中的 Shape 物件, 隨堂建立指定的機電系統模擬場景, 並利用 Python 程式進行互動控制. \n Exam2 (10%): 利用 CAD 零組件建立模擬場景\xa0 \n 各學員利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制. \n Exam3 (20%): Webots 機電模擬場景的協同設計 \n 各分組利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制. 過程中各學員必須採同步協同模式, 維護從 Github Classroom 取得的分組協同倉儲以及網站. \n 協同分組方式: \n \n 分配學員負責利用 Solvespace 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁. \n 分配學員負責利用 NX2312 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁. \n 分配學員負責利用 Webots 建立機電系統模擬場景, 並利用 Python 程式進行控制, 過程中必須將建構過程拍成帶有說明字幕的影片上傳至分組網頁. \n \n', 'tags': '', 'url': 'Exam.html'}, {'title': 'Exam1', 'text': 'Exam1 (10%): 建立 Webots 基本物件模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam1 - 學員學號 \n \n \n 檔案: \xa0 EX1檔案 \n \n 詳細步驟: \n 一、建立 Robot 與基座 (Base) \n \n \n 在  Robot  節點中建立一個  Solid ，作為基座  base 。 \n \n \n 在  base  的  children  中加入一個  Shape ，幾何為  Box ，大小為  1 x 0.1 x 0.1 。 \n \n \n 為  base  加入  boundingObject  與  physics 。 \n \n \n 二、建立第一個旋轉關節 joint1 與 link1 \n \n \n 在  Robot  底下加入第一個  HingeJoint ，命名為  joint1 。 \n \n \n 在  joint1  的  endPoint  中加入一個  Solid ，命名為  link1 。 \n \n \n 在  link1  中加入一個  Shape ，Box 尺寸為  0.4 x 0.1 x 0.1 。 \n \n \n 調整  link1  的位置為  (-0.5, 0, 0.1) ，旋轉角度為  (0, 0, 1, 0.0524) （學號尾碼為 03） \n \n \n 設定  joint1  的  axis = (0, 0, 1) ， anchor = (-0.5, 0, 0) 。 \n \n \n 在  joint1  中加入  RotationalMotor ，名稱為  motor1 。 \n \n \n 三、在 link1 末端建立 joint2 與 link2 \n \n 在  link1  的  children  中加入  HingeJoint ，命名為  joint2 。 \n 在  joint2  的  endPoint  中加入一個  Solid ，命名為  link2 。 \n 在  link2  中加入一個  Shape ，Box 尺寸為  0.6 x 0.1 x 0.1 。 \n 在  link2  裡再加一個  Shape ，Box 尺寸為  0.3 x 0.1 x 0.1 （附加結構） \n 調整  link2  的位置為  (0.4, 0, 0.1) ，旋轉為  (0, 0, 1, 1.67) 。 \n 設定  joint2  的  axis = (0, 0, 1) ， anchor = (0.4, 0, 0) 。 \n \n 四、在 link2 末端建立 joint3 與 link3 \n \n 在  link2  的  children  中加入  HingeJoint ，命名為  joint3 。 \n 在  joint3  的  endPoint  中加入一個  Solid ，命名為  link3 。 \n 在  link3  中加入一個  Shape ，Box 尺寸為  0.9 x 0.1 x 0.1 。 \n 調整  link3  的位置為  (0.6, 0, -0.1) ，旋轉為  (0, 0, -1, 2.4) 。 \n 設定  joint3  的  axis = (0, 0, 1) ， anchor = (0.6, 0, 0) 。 \n \n 五、從 Robot 底下建立 joint4，連接 link3（SolidReference） \n \n \n 在  Robot  的  children  中建立  HingeJoint ，命名為  joint4 。 \n \n \n 在  joint4  的  endPoint  中加入  SolidReference ，參考  link3 。 \n \n \n 設定  joint4  的  axis = (0, 0, 1) ， anchor = (1, 0, 0) 。 \n \n \n 六、加上碰撞與控制器 \n \n \n 為 link1、link2、link3 各自加入  boundingObject  與  physics 。 \n \n \n 使用  boundingObject  的  Pose  搭配  USE  語法重用對應的形狀。 \n \n \n 在  Robot  中加入  controller ，並指定控制程式名稱。 \n \n \n 心得: \n exam1和作業1很像，所以做起來沒有太大的困難，但程式有時候做到一半會閃退，所以要注意隨時存檔。', 'tags': '', 'url': 'Exam1.html'}, {'title': 'Exam2', 'text': 'Exam2 (10%): 利用 CAD 零組件建立模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam2 - 學員學號 \n \n \n \n 操作影片 \n \n \n 檔案連結:\xa0 Exam2.zip \n \n 步驟: \n 在  Solvespace  中完成零件與機構設計後，將模型匯出為 STL 格式。接著，使用程式碼工具將 STL 檔轉換為 OBJ 格式，再匯入  Blender ，以檢查所有零件名稱是否正確。 \n 確認模型無誤後，開始在  Webots  中建立機器人結構。首先，新增一個  Robot  節點，並設定所需的  controller （名稱為  fourbar_controller ）。接下來，在  children  中加入兩個旋轉關節（ HingeJoint ），分別命名為  joint1  與  joint4 ，以及兩個底座物件  Solid （分別命名為  base1  與  base2 ）。 \n \n base1 結構設定 \n 在  base1  的  children  中加入一個  Shape ，並指定  Mesh  幾何體。 \n \n base2 結構設定 \n 與 base1 類似，base2 也加入  Shape  和  Mesh。 \n \n 建立連桿與關節 \n \n joint1 \n \n \n 指定  Solid ，並在  children  中加入  Shape  與對應  Mesh 。 \n \n \n HingeJointParameters  中指定  axis  為  (0 0 1) 。 \n \n \n 加入  device  元件  RotationalMotor ，完成連桿 link1 的配置。 \n \n \n \n \n joint2 \n \n \n 同樣建立對應的  Solid  與  Shape 、 Mesh 。 \n \n \n axis  設為  (0 0 1) ，並設定  anchor  為  (1.03 , 0.0539 , 0) ，完成 link2。 \n \n \n \n \n joint3 \n \n \n 建立  Solid ，加入  Shape  和  Mesh 。 \n \n \n HingeJointParameters  指定  axis  為  (0 0 1) ，並設定  anchor  為  (0.864 , 1.54 , 0) ，完成 link3。 \n \n \n \n \n \n 物理與邊界設定 \n 每個連桿（link1、link2、link3）都加入： \n \n \n boundingObject ，使用對應的  mesh  作為碰撞邊界。 \n \n \n 對應的  physics  模組，加入質量與動力模擬設定。 \n \n \n \n joint4 設定 \n \n \n 建立  HingeJoint （joint4），並使用  SolidReference  指向  link3 。 \n \n \n 設定  HingeJointParameters  的  axis  為  (0 0 1) ， anchor  設為  (2 0 0) 。 \n \n \n \n 控制器設定 \n \n \n \n \n 指定使用的控制器為  fourbar_controller ，負責整體四連桿機構的控制與運作。 \n \n \n \n \n \n 心得: \n 考試2不像考試1一樣需要在webots裡繪製零件，而是要在Solvespace繪製完零件在轉檔匯入webots內，因此操作上相對簡單很多，只需要調整一下參數即可，', 'tags': '', 'url': 'Exam2.html'}, {'title': 'Exam3', 'text': 'Exam3 (20%): Webots 機電模擬場景的協同設計 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3 - 學員學號 \n \n Exam3-1 \n \n 操作步驟: \n \n 在控制台設定老師分發的 IPv6 網址 \n 關閉IPv4 網址 \n 以 \xa0webotsw --stream\xa0 啟動個人所完成的 \xa0HW1\xa0 模擬系統 \n 查看各自 webots 的端口 \n 在網頁上輸入 http:[ 自己的 IPv6 網址 ]: 查看當下自己 webots 的端口 /index.html \n 在 Connect to 內輸入 [ 自己的 IPv6 網址 ]:  查看當下自己 webots 的端口 \n 按下 Connect 即可看到自己 webots 的畫面 \n 按下 Disconnec \n 到 Connect to 內輸入 [ 組員的 IPv6 網址 ]:\xa0 組員 webots 的端口(組員同時也需連線至各自的IPv6)，並依序查看各組員的檔案 \n \n \n 心得: \n 剛開始不太理解要怎麼跟組員做協同，也不知道該如何連到自己的網站，摸索了很久才終於連上自己的網站，之後就協助組員連上各自的IPv6，第一次連上的感覺很不可思議，也體驗到協同作業的特別之處。 \n \n Exam3-2 \n \n 操作步驟: \n \n 在控制台設定老師分發的 IPv6 網址 \n 關閉IPv4 網址 \n 下載老師的檔案 \n 以 \xa0webotsw --stream\xa0 開啟 \n 查看各自 webots 的端口 \n 在程式碼處修改成各自的學號 \n 在網頁上輸入 http:[ 自己的 IPv6 網址 ]: 查看當下自己 webots 的端口 /index.html \n 在 Connect to 內輸入 [ 自己的 IPv6 網址 ]: \xa0 查看當下自己 webots 的端口 \n 按下 Connect 即可看到自己 webots 的畫面 \n 按下 Disconnec \n 到 Connect to 內輸入 [ 組員的 IPv6 網址 ]:\xa0 組員 webots 的端口(組員同時也需連線至各自的IPv6)，並依序查看各組員的檔案 \n \n \n 心得: \n 跟上一個內容差不多，只是要將程式碼的數字改成自己的學號末3碼，如果會操作上一個考試內容的話，這個題目也能成順利完成。 \n \n \n Exam3-3 \n \n 操作步驟: \n \n 在控制台設定老師分發的 IPv6 網址 \n 關閉IPv4 網址 \n 輸入 pip 確認安裝正確的 python版本 \n 輸入指令" set WEBOTS_HOME=y:\\Webots_2025a " \n 輸入指令" webots –stream " \n 執行指令" pip install websocket-client websocket-server keyboard " \n 執行" python youbot_cart_client.py" \n 查看各自 webots 的端口 \n 在程式碼處修改成各自的學號 \n 在網頁上輸入 http:[ 自己的 IPv6 網址 ]: 查看當下自己 webots 的端口 /index.html \n 在 Connect to 內輸入 [ 組長的 IPv6 網址 ]: \xa0 組長 webots 的端口 \n 按下 Connect 即可看到組長 webots 的畫面 \n 按下上下左右建即可操控 \n \n \n 心得: \n 這個題目相較於其他2題難度提高了不少，我們也是摸索很久，也求助於有相關經驗的學長才成功將這題做出來，不過這題的自由度相較於其他兩題來的高，如果成功用出來的話，成就感與可玩性也增加了不少。', 'tags': '', 'url': 'Exam3.html'}, {'title': 'Final', 'text': '期末協同專案執行過程影片、簡報與 PDf 報告檔案 (六人一組) (30%) \n 題目:  Webots 動態投籃模擬系統的協同設計 \n 說明:  \n 籃框架被配置在一定範圍內, 可隨機慢速前進、後退及左右擺動, 投籃機構系統帶有一定數量的籃球, 被配置在可自由移動的輪車上. \n 操作者可利用鍵盤特定按鍵控制投籃輪車的移動並發射投籃, 每投出一球後系統透過記分板進行計分, 並由送球機構進行補球或移動輪車取球, 遊戲可進行至全部數量籃球投完為止. \n 請將期末協同專案執行過程、內容與心得, 製作成影片，配合字幕上傳至 Youtube 後嵌入各階段的期末報告頁面中. \n 影片標題:  國立虎尾科技大學 - 機械設計工程系 - cd2025 期末報告 - 學員學號 - 各階段影片主題 \n', 'tags': '', 'url': 'Final.html'}, {'title': 'Brython', 'text': '1 add to 100 \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n \n \n', 'tags': '', 'url': 'Brython.html'}]};